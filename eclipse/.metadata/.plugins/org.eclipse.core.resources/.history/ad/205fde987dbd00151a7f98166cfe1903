package com.techofreak.AdvancedEnergies;

import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import cpw.mods.fml.common.IWorldGenerator;

public class RadiantCrystalGeneration implements IWorldGenerator{

	@Override
	public void generate(Random random, int chunkX, int chunkZ, World world,
			IChunkProvider chunkGenerator, IChunkProvider chunkProvider) {
		switch(world.provider.dimensionId){
		case 1:
			generateEnd(world, random, chunkX, chunkZ);
		case 0:
			generateOverworld(world, random, chunkX, chunkZ);
		case -1:
			generateNether(world, random, chunkX, chunkZ);
		}
		
	}
	
	public void generateEnd(World world, Random rand, int x, int z){
		
	}
	
	public void generateOverworld(World world, Random rand, int x, int z){
		
	}
	
	public void generateNether(World world, Random rand, int x, int z){
		
	}
	
	public void generateOre(Block block, World world, Random random, int chunkX, int chunkY, int minVeinSize, int maxVeinSize, int chance, int minY, int maxY, Block generateIn){
		int veinSize = minVeinSize + random.nextInt(maxVeinSize - minVeinSize);
		int heightRange = maxY - minY;
		WorldGenMinable gen = new WorldGenMinable(block, veinSize, generateIn);
	}
	
}
