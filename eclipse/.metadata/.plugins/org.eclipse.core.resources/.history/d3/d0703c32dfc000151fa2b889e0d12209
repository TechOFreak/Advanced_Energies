package com.techofreak.AdvancedEnergies.machines;

import com.techofreak.AdvancedEnergies.AdvancedEnergies;
import com.techofreak.AdvancedEnergies.Reference;
import com.techofreak.AdvancedEnergies.tileentity.TileEntityBasicConductionInfuser;

import cpw.mods.fml.common.network.internal.FMLNetworkHandler;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.BlockContainer;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.util.MathHelper;
import net.minecraft.world.World;

public class BasicConductionInfuser extends BlockContainer{

	private final boolean isActive;
	
	@SideOnly(Side.CLIENT)
	private IIcon iconFront;
	
	@SideOnly(Side.CLIENT)
	private IIcon iconTop;
	
	private static boolean keepInventory;
	
	public BasicConductionInfuser(Boolean isActive) {
		super(Material.rock);
		this.isActive = isActive;
	}
	
	@SideOnly(Side.CLIENT)
	public void registerBlockIcons(IIconRegister iconRegister){
		this.blockIcon = iconRegister.registerIcon(Reference.MOD_ID + ":" + "blockBasicConductionInfuserSide");
		this.iconFront = iconRegister.registerIcon(Reference.MOD_ID + ":" + (this.isActive ? "blockBasicConductionInfuserFrontOn" : "blockBasicConductionInfuserFrontOff"));
		this.iconTop = iconRegister.registerIcon(Reference.MOD_ID + ":" + "blockBasicConductionInfuserTop");
	}
	
	@SideOnly(Side.CLIENT)
	public IIcon getIcon(int side, int metadata){
		if(side == 0){
			//This is the top of the block
			return this.iconTop;
		}else if(side == 1){
			//This is the bottom of the block
			return this.iconTop;
		}else if(side == 2){
			//This is the left side of the block
			return this.blockIcon;
		}else if(side == 3){
			//This is the front of the block
			return this.iconFront;
		}else if(side == 4){
			//This is the right side of the block
			return this.blockIcon;
		}else{
			//This is the back of the block
			return this.blockIcon;
		} 
		//Below is the shorter version of the above code just here for reference
		//return side == 1 ? this.iconTop : (side == 0 ? this.iconTop : (side != metadata ? this.blockIcon : this.iconFront));
	}
	
	public Item getItemDropped(World world, int x, int y, int z){
		return Item.getItemFromBlock(AdvancedEnergies.blockBasicConductionInfuserIdle);
	}
	
	public void onBlockAdded(World world, int x, int y, int z){
		super.onBlockAdded(world, x, y, z);
		this.setDefaultDirection(world, x, y, z);
	}
	
	private void setDefaultDirection(World world, int x, int y, int z){
		if(!world.isRemote){
			Block b1 = world.getBlock(x,y,z-1);
			Block b2 = world.getBlock(x,y,z+1);
			Block b3 = world.getBlock(x-1,y,z);
			Block b4 = world.getBlock(x+1,y,z);
			
			byte b0 = 3;
			
			if(b1.func_149730_j() && !b2.func_149730_j()){
				b0 = 3;
			}
			
			if(b2.func_149730_j() && !b1.func_149730_j()){
				b0 = 2;
			}
			
			if(b3.func_149730_j() && !b4.func_149730_j()){
				b0 = 5;
			}
			
			if(b4.func_149730_j() && !b3.func_149730_j()){
				b0 = 4;
			}
			
			world.setBlockMetadataWithNotify(x, y, z, b0, 2);
		}
	}
	
	public void onBlockPlacedBy(World world, int x, int y, int z, EntityLivingBase entityplayer, ItemStack itemstack){
		int l = MathHelper.floor_double((double) (entityplayer.rotationYaw * 4.0F / 360.F) + 0.50) & 3;
	
		if(l == 0){
			world.setBlockMetadataWithNotify(x, y, z, 2, 2);
		}
		
		if(l == 1){
			world.setBlockMetadataWithNotify(x, y, z, 5, 2);
		}
		
		if(l == 2){
			world.setBlockMetadataWithNotify(x, y, z, 3, 2);
		}
		
		if(l == 3){
			world.setBlockMetadataWithNotify(x, y, z, 4, 2);
		}
		
		if(itemstack.hasDisplayName()){
			((TileEntityBasicConductionInfuser)world.getTileEntity(x, y, z)).setGuiDisplayName(itemstack.getDisplayName());
		}
	}
	
	public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int side, float hitX, float hitY, float hitZ){
		if(!world.isRemote){
			FMLNetworkHandler.openGui(player, AdvancedEnergies.instance, AdvancedEnergies.guiIDBasicConductionInfuser, world, x, y, z);
		}
		return true;
	}
	
	@Override
	public TileEntity createNewTileEntity(World p_149915_1_, int p_149915_2_) {
		return new TileEntityBasicConductionInfuser();
	}

	public static void updateBasicConductionInfuserBlockState(boolean active, World worldObj, int xCoord, int yCoord, int zCoord) {
		int i = worldObj.getBlockMetadata(xCoord, yCoord, zCoord);
		
		TileEntity tileentity = worldObj.getTileEntity(xCoord, yCoord, zCoord);
		keepInventory = true;
		
		if(active){
			worldObj.setBlock(xCoord, yCoord, zCoord, AdvancedEnergies.blockBasicConductionInfuserActive);
		}else{
			worldObj.setBlock(xCoord, yCoord, zCoord, AdvancedEnergies.blockBasicConductionInfuserIdle);
		}
		
		keepInventory = false;
		
		worldObj.setBlockMetadataWithNotify(xCoord, yCoord, zCoord, i, 2);
	}

}
